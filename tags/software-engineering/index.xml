<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
      <title>Software Engineering on generic test domain </title>
      <generator uri="https://gohugo.io">Hugo</generator>
    <link>http://generictestdomain.net/tags/software-engineering/index.xml</link>
    <language>en-gb</language>
    
    
    <updated>Mon, 01 Jan 0001 00:00:00 UTC</updated>
    
    <item>
      <title>The applications of Top Gun to software engineering</title>
      <link>http://generictestdomain.net/post/topgun/</link>
      <pubDate>Sun, 26 Mar 2017 21:35:50 BST</pubDate>
      
      <guid>http://generictestdomain.net/post/topgun/</guid>
      <description>Top Gun has a lot to teach us about software development. Through a recent viewing, I noticed a number of useful parallels and perpendicular. Significant spoilers ahead
Parallels Th crises that the Top Gun staff face are different from the crises that a software developer faces. However, we can still learn from their approaches to failure and learning.
On failed deployments  Viper: The simple fact is you feel responsible for Goose and you have a confidence problem.</description>
    </item>
    
  </channel>
</rss>

